{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/ui.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/services/photo.service\";\nimport * as i4 from \"src/app/services/auth.service\";\nimport * as i5 from \"src/app/services/request.service\";\nimport * as i6 from \"src/app/services/network-status.service\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@ionic/angular\";\n\nfunction OtherDocumentsPage_ng_container_7_ion_select_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-select-option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r4.name);\n  }\n}\n\nfunction OtherDocumentsPage_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"form\", 7)(2, \"ion-item\", 8)(3, \"ion-select\", 9);\n    i0.ɵɵtemplate(4, OtherDocumentsPage_ng_container_7_ion_select_option_4_Template, 2, 2, \"ion-select-option\", 10);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.document_information);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"selectedText\", ctx_r0.document.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.documents);\n  }\n}\n\nfunction OtherDocumentsPage_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-img\", 12);\n    i0.ɵɵlistener(\"click\", function OtherDocumentsPage_ng_template_8_Template_ion_img_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.getFile());\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r2.img.url);\n  }\n}\n\nexport let OtherDocumentsPage = /*#__PURE__*/(() => {\n  class OtherDocumentsPage {\n    constructor(ui, fb, photo, auth, request, network) {\n      this.ui = ui;\n      this.fb = fb;\n      this.photo = photo;\n      this.auth = auth;\n      this.request = request;\n      this.network = network;\n      this.document = {\n        id: \"\",\n        name: \"\"\n      };\n      this.document_information = this.fb.group({\n        document_type: ['', Validators.required]\n      });\n      this.other_documents = [];\n    }\n\n    ngOnInit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        if (this.img) {\n          this.document_information.setValue({\n            document_type: this.img[\"document_type_id \"]\n          });\n        } else {\n          if (this.network.getNetworkStatus().connected) {\n            const loader = yield this.ui.loading(\"Por favor espere...\");\n            this.request.get('list/attributes?parameter_id=8').subscribe(res => __awaiter(this, void 0, void 0, function* () {\n              this.documents = res.data;\n              (yield loader).dismiss();\n            }), err => __awaiter(this, void 0, void 0, function* () {\n              (yield loader).dismiss();\n            }));\n          } else {\n            this.ui.showToast(\"Verifique su conexión\");\n          }\n        }\n      });\n    }\n\n    dismiss() {\n      this.ui.dismiss();\n    }\n\n    takePhoto() {\n      return __awaiter(this, void 0, void 0, function* () {\n        try {\n          if (this.network.getNetworkStatus().connected) {\n            yield yield this.photo.selectImageSource();\n            this.photo.imageSubject.subscribe(image => {\n              const url = `driver/documents/${this.auth.user.id}/32`;\n              const dat = new Date().getTime();\n              const name_file1 = `${dat}_${this.auth.user.id}.${image.format}`;\n              const blob_image = this.photo.dataUrlToBlob(image.url);\n              const image_to_upload = this.photo.getFileImage(image.url, name_file1, image.format);\n              let data = new FormData();\n              data.append('photo', blob_image);\n              this.request.post(url, data).subscribe(res => __awaiter(this, void 0, void 0, function* () {\n                console.log(\"Este es el res\", res);\n                this.ui.showToast(\"Documento subido\", () => {\n                  this.dismiss();\n                });\n              }), err => __awaiter(this, void 0, void 0, function* () {\n                if (err.status == 400) {\n                  const error = JSON.stringify(err.error);\n                  const message = err.error.messages ? err.error.messages[0].length == 1 ? err.error.messages : err.error.messages[0] : 'No hay mensaje';\n                  yield this.ui.presentAlert({\n                    mode: 'ios',\n                    header: message,\n                    buttons: [{\n                      text: 'Aceptar',\n                      handler: () => {}\n                    }]\n                  });\n                }\n              }));\n            });\n          } else {\n            this.ui.showToast(\"Verifique su conexión\");\n          }\n        } catch (err) {\n          console.log(\"Error\", err);\n        }\n      });\n    }\n\n    getFile() {\n      return __awaiter(this, void 0, void 0, function* () {\n        if (this.document_information.valid) {\n          const {\n            document_type\n          } = this.document_information.value;\n\n          if (this.network.getNetworkStatus().connected) {\n            yield yield this.photo.selectImageSource();\n            this.photo.imageSubject.subscribe(image => __awaiter(this, void 0, void 0, function* () {\n              if (this.img) {\n                this.img.url = image.dataUrl;\n              }\n\n              const url = this.img ? `driver/update_documents/${this.img.document_id}` : `driver/documents/${this.auth.user.id}/${document_type}`;\n              let data = new FormData();\n              const dat = new Date().getTime();\n              const name_file1 = `${dat}_${this.auth.user.id}.${image.format}`;\n              const blob_image = this.photo.dataUrlToBlob(image.dataUrl);\n              const image_to_upload = this.photo.getFileImage(image.dataUrl, name_file1, image.format);\n              data.append('photo', blob_image);\n              const loader = yield this.ui.loading(\"Por favor espere...\");\n              this.request.post(url, data).subscribe(res => __awaiter(this, void 0, void 0, function* () {\n                (yield loader).dismiss();\n\n                if (this.img) {\n                  const find = this.others.findIndex(o => o.document_id == this.img);\n\n                  if (find != -1) {\n                    this.others[find] = this.img;\n                  }\n                } else {\n                  this.others.push({\n                    url: image.dataUrl\n                  });\n                }\n\n                yield this.ui.presentAlert({\n                  mode: 'ios',\n                  header: '¡Archivo subido con éxito!',\n                  buttons: [{\n                    text: 'Aceptar',\n                    handler: () => {}\n                  }]\n                });\n              }), err => __awaiter(this, void 0, void 0, function* () {\n                (yield loader).dismiss();\n\n                if (err.status == 400) {\n                  const error = JSON.stringify(err.error);\n                  const message = err.error.messages ? err.error.messages[0].length == 1 ? err.error.messages : err.error.messages[0] : 'No hay mensaje';\n                  yield this.ui.presentAlert({\n                    mode: 'ios',\n                    header: message,\n                    buttons: [{\n                      text: 'Aceptar',\n                      handler: () => {}\n                    }]\n                  });\n                }\n\n                console.log(\"Err\", err);\n              }));\n            }));\n          } else {\n            this.ui.showToast(\"Verifique su conexión\");\n          }\n        } else {\n          this.ui.showToast(\"Debe escoger un tipo de documento\");\n        }\n      });\n    }\n\n  }\n\n  OtherDocumentsPage.ɵfac = function OtherDocumentsPage_Factory(t) {\n    return new (t || OtherDocumentsPage)(i0.ɵɵdirectiveInject(i1.UiService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.PhotoService), i0.ɵɵdirectiveInject(i4.AuthService), i0.ɵɵdirectiveInject(i5.RequestService), i0.ɵɵdirectiveInject(i6.NetworkStatusService));\n  };\n\n  OtherDocumentsPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OtherDocumentsPage,\n    selectors: [[\"app-other-documents\"]],\n    inputs: {\n      documents: \"documents\",\n      others: \"others\",\n      img: \"img\"\n    },\n    decls: 12,\n    vars: 2,\n    consts: [[\"color\", \"primary\", \"mode\", \"ios\", 2, \"position\", \"relative\"], [2, \"position\", \"absolute\", \"left\", \"5px\", \"bottom\", \"14px\"], [2, \"position\", \"absolute\", \"right\", \"5px\", \"bottom\", \"5px\", 3, \"click\"], [\"slot\", \"icon-only\", \"name\", \"close-outline\"], [4, \"ngIf\", \"ngIfElse\"], [\"elseTemplate\", \"\"], [\"expand\", \"block\", \"mode\", \"ios\", \"color\", \"primary\", 1, \"ion-margin-bottom\", 3, \"click\"], [3, \"formGroup\"], [\"lines\", \"none\", 1, \"input-text\", \"ion-margin-top\"], [\"placeholder\", \"Tipo de documento\", \"formControlName\", \"document_type\", \"required\", \"\", 2, \"display\", \"contents\", 3, \"selectedText\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [2, \"width\", \"100%\", \"height\", \"300px\", 3, \"src\", \"click\"]],\n    template: function OtherDocumentsPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"ion-title\", 1);\n        i0.ɵɵtext(3, \"Otros \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-button\", 2);\n        i0.ɵɵlistener(\"click\", function OtherDocumentsPage_Template_ion_button_click_4_listener() {\n          return ctx.dismiss();\n        });\n        i0.ɵɵelement(5, \"ion-icon\", 3);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"ion-content\");\n        i0.ɵɵtemplate(7, OtherDocumentsPage_ng_container_7_Template, 5, 3, \"ng-container\", 4);\n        i0.ɵɵtemplate(8, OtherDocumentsPage_ng_template_8_Template, 1, 1, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementStart(10, \"ion-button\", 6);\n        i0.ɵɵlistener(\"click\", function OtherDocumentsPage_Template_ion_button_click_10_listener() {\n          return ctx.getFile();\n        });\n        i0.ɵɵtext(11, \" Subir documento \");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(9);\n\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", !ctx.img)(\"ngIfElse\", _r1);\n      }\n    },\n    dependencies: [i7.NgForOf, i7.NgIf, i2.ɵNgNoValidate, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName, i8.IonButton, i8.IonContent, i8.IonHeader, i8.IonIcon, i8.IonImg, i8.IonItem, i8.IonSelect, i8.IonSelectOption, i8.IonToolbar, i8.IonTitle, i8.SelectValueAccessor]\n  });\n  return OtherDocumentsPage;\n})();","map":null,"metadata":{},"sourceType":"module"}