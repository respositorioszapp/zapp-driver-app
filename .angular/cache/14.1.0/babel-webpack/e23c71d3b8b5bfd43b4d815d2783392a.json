{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Plugins } from '@capacitor/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./ui.service\";\nconst {\n  Network\n} = Plugins;\nexport let NetworkStatusService = /*#__PURE__*/(() => {\n  class NetworkStatusService {\n    constructor(ui) {\n      this.ui = ui;\n    } // getNetworkStatus = (subscription: Observable<Object>, res: any, err: any) {\n    // }\n\n\n    getNetworkStatusSubscription(subscription, res, err, loader) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const networkStatus = JSON.parse(localStorage.getItem(\"network_status\"));\n\n        if (networkStatus.connected) {\n          subscription.subscribe(res, err);\n\n          if (networkStatus.connectionType.includes(\"slow\")) {\n            this.ui.showToast(\"Su conexión es lenta podría tomar un tiempo\");\n          }\n        } else {\n          if (loader) {\n            (yield loader).dismiss();\n          }\n\n          this.ui.presentAlert({\n            mode: 'ios',\n            header: 'La conexión no está disponible',\n            buttons: [{\n              text: 'Aceptar',\n              role: 'cancel',\n              cssClass: 'secondary',\n              handler: blah => {}\n            }]\n          });\n        }\n      });\n    }\n\n    getNetworkStatus() {\n      const networkStatus = JSON.parse(localStorage.getItem(\"network_status\"));\n      return networkStatus;\n    }\n\n  }\n\n  NetworkStatusService.ɵfac = function NetworkStatusService_Factory(t) {\n    return new (t || NetworkStatusService)(i0.ɵɵinject(i1.UiService));\n  };\n\n  NetworkStatusService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NetworkStatusService,\n    factory: NetworkStatusService.ɵfac,\n    providedIn: 'root'\n  });\n  return NetworkStatusService;\n})();","map":null,"metadata":{},"sourceType":"module"}