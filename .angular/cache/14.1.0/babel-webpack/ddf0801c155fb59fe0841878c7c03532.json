{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport { Component, ViewChildren } from '@angular/core';\nimport { IonRouterOutlet } from '@ionic/angular';\nimport { Plugins } from '@capacitor/core';\nconst {\n  Network,\n  LocalNotifications\n} = Plugins;\nlet AppComponent = class AppComponent {\n  constructor(platform, splashScreen, statusBar, fcm, background_mode, location, router, ui) {\n    this.platform = platform;\n    this.splashScreen = splashScreen;\n    this.statusBar = statusBar;\n    this.fcm = fcm;\n    this.background_mode = background_mode;\n    this.location = location;\n    this.router = router;\n    this.ui = ui;\n    this.lastTimeBackPress = 0;\n    this.timePeriodToExit = 2000;\n    Network.addListener('networkStatusChange', status => {\n      this.networkStatus = status;\n      console.log(\"Network status changed\", status);\n      localStorage.setItem(\"network_status\", JSON.stringify(status));\n\n      if (status.connected) {// location.reload()\n      }\n    });\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)');\n    this.toggleDarkTheme(prefersDark.matches); // Listen for changes to the prefers-color-scheme media query\n\n    prefersDark.addListener(mediaQuery => this.toggleDarkTheme(mediaQuery.matches)); // Add or remove the \"dark\" class based on if the media query matches\n\n    document.body.classList.toggle('dark', true);\n    this.backButtonEvent();\n    this.initializeNetwork();\n    this.initializeApp();\n  }\n\n  toggleDarkTheme(shouldAdd) {\n    console.log(\"shouldAdd\", shouldAdd);\n    document.body.classList.toggle('dark', shouldAdd);\n  }\n\n  backButtonEvent() {\n    this.platform.backButton.subscribeWithPriority(0, () => {\n      this.routerOutlets.forEach(outlet => __awaiter(this, void 0, void 0, function* () {\n        console.log(`Url ${this.router.url}`);\n\n        if (!this.router.url.includes('tabs/home')) {\n          // await this.router.navigate(['/']);\n          yield this.location.back();\n        } else if (this.router.url.includes('tabs/home')) {\n          if (new Date().getTime() - this.lastTimeBackPress >= this.timePeriodToExit) {\n            this.lastTimeBackPress = new Date().getTime();\n            this.presentAlertConfirm();\n          } else {\n            navigator['app'].exitApp();\n          }\n        }\n      }));\n    });\n  }\n\n  presentAlertConfirm() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.ui.presentAlert({\n        // header: 'Confirm!',\n        message: 'Está seguro de querer salir de la app?',\n        buttons: [{\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: blah => {}\n        }, {\n          text: 'Cerrar Aplicación',\n          handler: () => {\n            navigator['app'].exitApp();\n          }\n        }]\n      });\n    });\n  }\n\n  initializeNetwork() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.networkStatus = yield Network.getStatus();\n      localStorage.setItem(\"network_status\", JSON.stringify(this.networkStatus));\n      console.log(\"Network status \", this.networkStatus);\n    });\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n      this.fcm.initPush(); //this.backgroundMode.enable();\n    });\n  }\n\n};\n\n__decorate([ViewChildren(IonRouterOutlet)], AppComponent.prototype, \"routerOutlets\", void 0);\n\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss']\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module"}