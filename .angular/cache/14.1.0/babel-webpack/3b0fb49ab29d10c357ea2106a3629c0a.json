{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Plugins } from '@capacitor/core';\nimport * as i0 from \"@angular/core\";\nconst {\n  Storage\n} = Plugins;\nexport let StorageService = /*#__PURE__*/(() => {\n  class StorageService {\n    constructor() {} // JSON \"set\" \n\n\n    setObject(key, jsonOject) {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield Storage.set({\n          key: key,\n          value: JSON.stringify(jsonOject)\n        });\n      });\n    } // JSON \"get\" \n\n\n    getObject(key) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const ret = yield Storage.get({\n          key\n        });\n        return JSON.parse(ret.value);\n      });\n    }\n\n    setItem(key, value) {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield Storage.set({\n          key,\n          value\n        });\n      });\n    }\n\n    getItem(key) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const {\n          value\n        } = yield Storage.get({\n          key\n        });\n        return value;\n      });\n    }\n\n    removeItem(key) {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield Storage.remove({\n          key\n        });\n      });\n    }\n\n    keys() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const {\n          keys\n        } = yield Storage.keys();\n        return keys;\n      });\n    }\n\n    clear() {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield Storage.clear();\n      });\n    }\n\n  }\n\n  StorageService.ɵfac = function StorageService_Factory(t) {\n    return new (t || StorageService)();\n  };\n\n  StorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StorageService,\n    factory: StorageService.ɵfac,\n    providedIn: 'root'\n  });\n  return StorageService;\n})();","map":null,"metadata":{},"sourceType":"module"}