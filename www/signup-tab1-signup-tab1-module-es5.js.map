{"version":3,"sources":["webpack:///src/app/screens/auth/signup-tab1/signup-tab1.page.html","webpack:///src/app/screens/auth/signup-tab1/signup-tab1-routing.module.ts","webpack:///src/app/screens/auth/signup-tab1/signup-tab1.module.ts","webpack:///src/app/screens/auth/signup-tab1/signup-tab1.page.scss","webpack:///src/app/screens/auth/signup-tab1/signup-tab1.page.ts"],"names":["routes","path","component","SignupTab1PageRoutingModule","imports","forChild","exports","SignupTab1PageModule","declarations","SignupTab1Page","requestService","fb","router","ui","network","view","view_confirm","cities","city","types","type","id","name","personal_information","group","names","required","lastnames","address","dni_type_id","dni","phone","minLength","maxLength","pattern","email","password","password_confirm","validators","person","localStorage","getItem","JSON","parse","console","log","setValue","item","controls","value","getNetworkStatus","connected","loading","loader","get","subscribe","res","data","find","c","valueChanges","dismiss","t","err","showToast","obj","valid","setItem","stringify","navigate","selector","template"],"mappings":"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","file":"signup-tab1-signup-tab1-module-es5.js","sourcesContent":["export default \"<h4 style=\\\"text-align: center;\\\">Registro usuario</h4>\\n<form [formGroup]=\\\"personal_information\\\" (submit)=\\\"next()\\\" novalidate>\\n  <ion-item  lines=\\\"none\\\" class=\\\"input-text ion-margin-top\\\">\\n    \\n    <ion-select placeholder=\\\"Seleccione una tipo\\\" name=\\\"city\\\" formControlName=\\\"dni_type_id\\\" style=\\\"display: contents;\\\" [selectedText]=\\\"type.name\\\">\\n      <ion-select-option *ngFor=\\\"let item of types; let i = index \\\" [value]=\\\"item.id\\\"  >{{item.name }}</ion-select-option>\\n    </ion-select>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"danger-color-text\\\" *ngIf=\\\"controls.dni_type_id.dirty && controls.dni_type_id.touched && controls.dni_type_id.errors\\\">\\n    <ion-icon name=\\\"alert-circle\\\" slot=\\\"start\\\" class=\\\"danger-color-text\\\"></ion-icon>\\n    <ion-label *ngIf=\\\"controls.dni_type_id.errors.required\\\">El tipo de documento es requerido</ion-label>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"input-text ion-margin-top\\\">\\n    <ion-input placeholder=\\\"No. Identificación\\\" formControlName=\\\"dni\\\" required></ion-input>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"danger-color-text\\\" *ngIf=\\\" controls.dni.dirty && controls.dni.touched && controls.dni.errors\\\">\\n    <ion-icon name=\\\"alert-circle\\\" slot=\\\"start\\\" class=\\\"danger-color-text\\\"></ion-icon>\\n    <ion-label *ngIf=\\\"controls.dni.errors.required\\\">El número de identificación es requerido</ion-label>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"input-text ion-margin-top\\\">\\n    <ion-input placeholder=\\\"Nombre\\\" formControlName=\\\"names\\\" required></ion-input>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"danger-color-text\\\" *ngIf=\\\" controls.names.dirty && controls.names.touched && controls.names.errors\\\">\\n    <ion-icon name=\\\"alert-circle\\\" slot=\\\"start\\\" class=\\\"danger-color-text\\\"></ion-icon>\\n    <ion-label *ngIf=\\\"controls.names.errors.required\\\">Nombre es requerido</ion-label>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\"  class=\\\"input-text ion-margin-top\\\">\\n    <ion-input placeholder=\\\"Apellidos\\\" formControlName=\\\"lastnames\\\" required></ion-input>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"danger-color-text\\\" *ngIf=\\\" controls.lastnames.dirty && controls.lastnames.touched && controls.lastnames.errors\\\">\\n    <ion-icon name=\\\"alert-circle\\\" slot=\\\"start\\\" class=\\\"danger-color-text\\\" ></ion-icon>\\n    <ion-label *ngIf=\\\"controls.lastnames.errors.required\\\" >Apellidos es requerido</ion-label>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"input-text ion-margin-top\\\">\\n    <ion-input placeholder=\\\"Dirección\\\" formControlName=\\\"address\\\" required></ion-input>\\n  </ion-item>\\n  <ion-item class=\\\"danger-color-text\\\" *ngIf=\\\"controls.address.dirty && controls.address.touched && controls.address.errors\\\">\\n    <ion-icon name=\\\"alert-circle\\\" slot=\\\"start\\\" class=\\\"danger-color-text\\\"></ion-icon>\\n    <ion-label *ngIf=\\\"controls.address.errors.required\\\">Dirección es requerida</ion-label>\\n  </ion-item>\\n  <ion-item  lines=\\\"none\\\" class=\\\"input-text ion-margin-top\\\">\\n    \\n    <ion-select placeholder=\\\"Seleccione una ciudad\\\" name=\\\"city\\\" formControlName=\\\"city\\\" style=\\\"display: contents;\\\" [selectedText]=\\\"city.name\\\">\\n      <ion-select-option *ngFor=\\\"let item of cities; let i = index \\\" [value]=\\\"item.id\\\"  >{{item.name }}</ion-select-option>\\n    </ion-select>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\"  class=\\\"danger-color-text\\\" *ngIf=\\\"controls.city.dirty && controls.city.touched && controls.city.errors\\\">\\n    <ion-icon name=\\\"alert-circle\\\" slot=\\\"start\\\" class=\\\"danger-color-text\\\"></ion-icon>\\n    <ion-label *ngIf=\\\"controls.city.errors.required\\\">La ciudad es requerida</ion-label>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"input-text ion-margin-top\\\">\\n    <ion-input placeholder=\\\"Teléfono\\\" formControlName=\\\"phone\\\" required></ion-input>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"danger-color-text\\\" *ngIf=\\\"controls.phone.dirty && controls.phone.touched && controls.phone.errors\\\">\\n    <ion-icon name=\\\"alert-circle\\\" slot=\\\"start\\\" class=\\\"danger-color-text\\\"></ion-icon>\\n    <ion-label *ngIf=\\\"controls.phone.errors.required\\\">El teléfono es requerido</ion-label>\\n    <ion-label *ngIf=\\\"controls.phone.errors.minlength || controls.phone.errors.maxlength\\\">\\n      Debe ser 10 dígitos\\n    </ion-label>\\n    <ion-label *ngIf=\\\"controls.phone.errors.pattern\\\">El télefono es un valor numérico</ion-label>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"input-text ion-margin-top\\\">\\n    <ion-input placeholder=\\\"Email\\\" formControlName=\\\"email\\\" type=\\\"email\\\" required></ion-input>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"danger-color-text\\\" *ngIf=\\\" controls.email.dirty && controls.email.touched && controls.email.errors\\\">\\n    <ion-icon class=\\\"danger-color-text\\\" name=\\\"alert-circle\\\" slot=\\\"start\\\"></ion-icon>\\n    <ion-label *ngIf=\\\"controls.email.errors.required\\\">Email es requerido</ion-label>\\n    <ion-label *ngIf=\\\"controls.email.errors.email || controls.email.errors.pattern\\\">Debe ser un email válido</ion-label>\\n  </ion-item>\\n\\n  <ion-item lines=\\\"none\\\" class=\\\"input-text ion-margin-top\\\">\\n    <ion-input placeholder=\\\"Contraseña\\\" formControlName=\\\"password\\\" [type]=\\\"view ? 'text':'password'\\\" required></ion-input>\\n    <ion-icon [name]=\\\"view ? 'eye-outline': 'eye-off-outline'\\\" slot=\\\"end\\\" (click)=\\\"setView()\\\"></ion-icon>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"danger-color-text\\\"\\n    *ngIf=\\\"controls.password.dirty && controls.password.touched && controls.password.errors\\\">\\n    <ion-icon name=\\\"alert-circle\\\" slot=\\\"start\\\" class=\\\"danger-color-text\\\"></ion-icon>\\n    <ion-label *ngIf=\\\"controls.password.errors.required\\\">La contraseña es requerida</ion-label>\\n    <ion-label *ngIf=\\\"controls.password.errors.minlength || controls.password.errors.maxlength\\\">La contraseña debe\\n      ser\\n      de 8 a 16 caracteres</ion-label>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"input-text ion-margin-top\\\">\\n    <ion-input placeholder=\\\"Repetir Contraseña\\\" formControlName=\\\"password_confirm\\\" [type]=\\\"view_confirm ? 'text':'password'\\\" required>\\n    </ion-input>\\n    <ion-icon [name]=\\\"view_confirm ? 'eye-outline': 'eye-off-outline'\\\" slot=\\\"end\\\" (click)=\\\"setViewConfirm()\\\"></ion-icon>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"danger-color-text\\\"\\n    *ngIf=\\\"controls.password_confirm.dirty && controls.password_confirm.touched && controls.password_confirm.errors\\\">\\n    <ion-icon name=\\\"alert-circle\\\" slot=\\\"start\\\" class=\\\"danger-color-text\\\"></ion-icon>\\n    <ion-label *ngIf=\\\"controls.password_confirm.errors.required\\\">La contraseña es requerida</ion-label>\\n    <ion-label *ngIf=\\\"controls.password_confirm.errors.mustMatch\\\">Las contraseñas no coinciden</ion-label>\\n  </ion-item>\\n  <ion-button type=\\\"submit\\\" expand=\\\"block\\\" mode=\\\"ios\\\" color=\\\"primary\\\" class=\\\"ion-margin-top\\\" >\\n    CONTINUAR\\n  </ion-button>\\n</form>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignupTab1Page } from './signup-tab1.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupTab1Page\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SignupTab1PageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SignupTab1PageRoutingModule } from './signup-tab1-routing.module';\n\nimport { SignupTab1Page } from './signup-tab1.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    SignupTab1PageRoutingModule\n  ],\n  declarations: [SignupTab1Page]\n})\nexport class SignupTab1PageModule {}\n","export default \"ion-icon {\\n  -webkit-margin-end: 10px !important;\\n          margin-inline-end: 10px !important;\\n  margin-top: 7px;\\n  margin-bottom: 7px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXNwcmlsbGEvRG9jdW1lbnRvc01pZ3VlbC9Qcm95ZWN0b3MvemFwcC96YXBwLWRyaXZlci1hcHAtcnBlbmFsb3phL3NyYy9hcHAvc2NyZWVucy9hdXRoL3NpZ251cC10YWIxL3NpZ251cC10YWIxLnBhZ2Uuc2NzcyIsInNyYy9hcHAvc2NyZWVucy9hdXRoL3NpZ251cC10YWIxL3NpZ251cC10YWIxLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG1DQUFBO1VBQUEsa0NBQUE7RUFDQSxlQUFBO0VBQ0Esa0JBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3NjcmVlbnMvYXV0aC9zaWdudXAtdGFiMS9zaWdudXAtdGFiMS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24taWNvbntcbiAgICBtYXJnaW4taW5saW5lLWVuZDogMTBweCAhaW1wb3J0YW50O1xuICAgIG1hcmdpbi10b3A6IDdweDtcbiAgICBtYXJnaW4tYm90dG9tOiA3cHg7XG59IiwiaW9uLWljb24ge1xuICBtYXJnaW4taW5saW5lLWVuZDogMTBweCAhaW1wb3J0YW50O1xuICBtYXJnaW4tdG9wOiA3cHg7XG4gIG1hcmdpbi1ib3R0b206IDdweDtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { RequestService } from 'src/app/services/request.service';\nimport { City } from 'src/app/interfaces/City';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ComparePassword } from 'src/app/validators/passwod.validator';\nimport { Router } from '@angular/router';\nimport { UiService } from 'src/app/services/ui.service';\nimport { NetworkStatusService } from 'src/app/services/network-status.service';\n\n@Component({\n  selector: 'app-signup-tab1',\n  templateUrl: './signup-tab1.page.html',\n  styleUrls: ['./signup-tab1.page.scss'],\n})\nexport class SignupTab1Page implements OnInit {\n  view = false\n  view_confirm = false\n  cities = [];\n  city: any = {};\n  types = []\n  type: any = {\n    id: \"\",\n    name: \"\"\n  }\n  /**\n   * dni_type_id: information.typeId,\n          dni: information.identification,\n   */\n  personal_information = this.fb.group({\n    names: ['', Validators.required],\n    lastnames: ['', Validators.required],\n    address: ['', Validators.required],\n    dni_type_id: [10, Validators.required],\n    dni: ['', Validators.required],\n    city: [4, Validators.required],\n    phone: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10), Validators.pattern('^[0-9]*$')],],\n    email: ['', [Validators.required, Validators.pattern('[A-Za-z0-9._%+-]{3,}@[a-zA-Z]{2,}([.]{1}[a-zA-Z]{2,}|[.]{1}[a-zA-Z]{2,}[.]{1}[a-zA-Z]{2,})')]],\n    password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(16)]],\n    password_confirm: ['', Validators.required],\n  },\n    {\n      validators: ComparePassword(\"password\", \"password_confirm\")\n    }\n  );\n  constructor(private requestService: RequestService,\n    private fb: FormBuilder, private router: Router, private ui: UiService, private network: NetworkStatusService) {\n    let person: any = {}\n    if (localStorage.getItem(\"personal_information\")) {\n      person = JSON.parse(localStorage.getItem(\"personal_information\"));\n      console.log(\"City id\", person.city.id)\n      this.personal_information\n        .setValue({\n          names: person.names,\n          lastnames: person.lastnames,\n          address: person.address,\n          city: person.city.id,\n          phone: person.phone,\n          email: person.email,\n          password: person.password,\n          password_confirm: person.password_confirm,\n          dni: person.dni ? person.dni : '',\n          dni_type_id: person.dni_type_id ? person.dni_type_id : 10\n        });\n    }\n  }\n\n  getSelected(item) {\n    return item.id == this.controls.city.value;\n  }\n\n  setView(){\n    this.view = !this.view;\n  }\n\n  setViewConfirm(){\n    this.view_confirm = !this.view_confirm;\n  }\n\n  async ngOnInit() {\n    if (this.network.getNetworkStatus().connected) {\n      const loader = await this.ui.loading(\"Por favor espere...\");\n      this.requestService.get('indexcities')\n        .subscribe(async (res: any) => {\n\n          this.cities = res.data;\n          this.city = this.cities.find(c => c.id == this.controls.city.value);\n          this.controls.city.valueChanges.subscribe((res => {\n            console.log(\"Change city\", res)\n            this.city = this.cities.find(c => c.id == res);\n            console.log(\"Change city\", this.city)\n          }))\n          this.requestService.get('list/attributes?parameter_id=4').subscribe(async (res: any) => {\n\n            (await loader).dismiss();\n            this.types = res.data;\n            this.type = this.types.find(t => t.id == 10)\n            if (localStorage.getItem(\"personal_information\")) {\n              const person = JSON.parse(localStorage.getItem(\"personal_information\"));\n              this.type = this.types.find(t => t.id == person.dni_type_id)\n            }\n            this.controls.dni_type_id.valueChanges.subscribe(res => {\n              this.type = this.types.find(t => t.id == res)\n            })\n          }, async (err: any) => {\n            (await loader).dismiss();\n          })\n\n        }, err => {\n          this.requestService.get('list/attributes?parameter_id=4').subscribe(async (res: any) => {\n\n            (await loader).dismiss();\n            this.types = res.data;\n            this.type = this.types.find(t => t.id == 10)\n            if (localStorage.getItem(\"personal_information\")) {\n              const person = JSON.parse(localStorage.getItem(\"personal_information\"));\n              this.type = this.types.find(t => t.id == person.dni_type_id)\n            }\n            this.controls.dni_type_id.valueChanges.subscribe(res => {\n              this.type = this.types.find(t => t.id == res)\n            })\n          }, async (err: any) => {\n            (await loader).dismiss();\n          })\n        })\n\n    }else{\n      this.ui.showToast(\"Verifica tu conexión\")\n    }\n\n  }\n\n\n\n  get controls() {\n    return this.personal_information.controls;\n  }\n\n  async next() {\n    const obj = {\n      ...this.personal_information.value,\n    }\n    obj.city = this.city;\n    if (this.personal_information.valid) {\n      localStorage.setItem(\"personal_information\", JSON.stringify(obj));\n      this.router.navigate([\"/signup/tab2\"])\n    }\n  }\n\n}\n"]}