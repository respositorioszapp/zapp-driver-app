{"version":3,"sources":["webpack:///src/app/screens/screens-tabs/personal-information/personal-information.page.html","webpack:///src/app/screens/screens-tabs/personal-information/personal-information-routing.module.ts","webpack:///src/app/screens/screens-tabs/personal-information/personal-information.module.ts","webpack:///src/app/screens/screens-tabs/personal-information/personal-information.page.scss","webpack:///src/app/screens/screens-tabs/personal-information/personal-information.page.ts"],"names":["routes","path","component","PersonalInformationPageRoutingModule","imports","forChild","exports","PersonalInformationPageModule","declarations","PersonalInformationPage","requestService","fb","router","ui","auth","network","cities","city","types","type","id","name","personal_information","group","dni_type_id","required","dni","first_name","last_name","address","phone","minLength","maxLength","pattern","email","objectChange","person","city_id","setValue","getNetworkStatus","connected","loading","loader","get","subscribe","res","data","obj","find","c","controls","valueChanges","console","log","y","Object","keys","key","dismiss","t","err","showToast","navigate","valid","value","user_id","user","role_id","country","state_id","transport_type_id","vehicles","model","brand","color","plate","year","post","setPerson","error","messages","selector","template"],"mappings":"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","file":"screens-screens-tabs-personal-information-personal-information-module-es5.js","sourcesContent":["export default \"\\n<ion-content color=\\\"warning\\\">\\n  <ion-button fill=\\\"clear\\\" (click) =\\\"back()\\\" style=\\\"position: absolute;\\n  left: 0px;\\n  padding: 10px;\\\" >\\n    <ion-icon name=\\\"arrow-back-outline\\\"   slot=\\\"icon-only\\\"  ></ion-icon>\\n  </ion-button>\\n  <div style=\\\"position: relative;\\\">\\n    <div class=\\\"ion-text-center margin-top-15vh ion-padding-bottom\\\" style=\\\"width: 60%;\\n    margin: auto;\\n    position: absolute;\\n    left: 0;\\n    right: 0;\\\">\\n      <img src=\\\"assets/imgs/logo-morado.png\\\" width=\\\"100\\\">\\n    </div>\\n  </div>\\n  <ion-card style=\\\"margin-top:50px\\\">\\n    <ion-card-header>\\n      <ion-card-subtitle class=\\\"ion-text-center\\\">\\n        <h3 ><span class=\\\"black-color-text ion-text-justify\\\">Informaci√≥n personal</span></h3>\\n        \\n      </ion-card-subtitle>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <form [formGroup]=\\\"personal_information\\\" (submit)=\\\"update()\\\" novalidate>\\n        <ion-item  lines=\\\"none\\\" class=\\\"input-text ion-margin-top\\\">\\n    \\n          <ion-select placeholder=\\\"Seleccione una tipo\\\" name=\\\"city\\\" formControlName=\\\"dni_type_id\\\" style=\\\"display: contents;\\\" [selectedText]=\\\"type.name\\\" disabled=\\\"true\\\">\\n            <ion-select-option *ngFor=\\\"let item of types; let i = index \\\" [value]=\\\"item.id\\\"  >{{item.name }}</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" class=\\\"danger-color-text\\\" *ngIf=\\\"controls.dni_type_id.dirty && controls.dni_type_id.touched && controls.dni_type_id.errors\\\">\\n          <ion-icon name=\\\"alert-circle\\\" class=\\\"danger-color-text\\\" slot=\\\"start\\\"></ion-icon>\\n          <ion-label *ngIf=\\\"controls.dni_type_id.errors.required\\\">El tipo de documento es requerido</ion-label>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" class=\\\"input-text ion-margin-top\\\">\\n          <ion-input placeholder=\\\"No. Identificaci√≥n\\\" formControlName=\\\"dni\\\" disabled=\\\"true\\\" required></ion-input>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" class=\\\"danger-color-text\\\" *ngIf=\\\" controls.dni.dirty && controls.dni.touched && controls.dni.errors\\\">\\n          <ion-icon name=\\\"alert-circle\\\" slot=\\\"start\\\" class=\\\"danger-color-text\\\"></ion-icon>\\n          <ion-label *ngIf=\\\"controls.dni.errors.required\\\">El n√∫mero de identificaci√≥n es requerido</ion-label>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" class=\\\"input-text ion-margin-top\\\">\\n          <ion-input placeholder=\\\"Nombre\\\" formControlName=\\\"first_name\\\" disabled=\\\"true\\\" required></ion-input>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" class=\\\"danger-color-text\\\" *ngIf=\\\" controls.first_name.dirty && controls.first_name.touched && controls.first_name.errors\\\">\\n          <ion-icon name=\\\"alert-circle\\\" slot=\\\"start\\\" class=\\\"danger-color-text\\\"></ion-icon>\\n          <ion-label *ngIf=\\\"controls.first_name.errors.required\\\">Nombre es requerido</ion-label>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\"  class=\\\"input-text ion-margin-top\\\">\\n          <ion-input placeholder=\\\"Apellidos\\\" formControlName=\\\"last_name\\\" disabled=\\\"true\\\" required></ion-input>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" class=\\\"danger-color-text\\\" *ngIf=\\\" controls.last_name.dirty && controls.last_name.touched && controls.last_name.errors\\\">\\n          <ion-icon name=\\\"alert-circle\\\" slot=\\\"start\\\" class=\\\"danger-color-text\\\" ></ion-icon>\\n          <ion-label *ngIf=\\\"controls.last_name.errors.required\\\" >Apellidos es requerido</ion-label>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" class=\\\"input-text ion-margin-top\\\">\\n          <ion-input placeholder=\\\"Direcci√≥n\\\" formControlName=\\\"address\\\" required></ion-input>\\n        </ion-item>\\n        <ion-item class=\\\"danger-color-text\\\" *ngIf=\\\"controls.address.dirty && controls.address.touched && controls.address.errors\\\">\\n          <ion-icon name=\\\"alert-circle\\\" slot=\\\"start\\\" class=\\\"danger-color-text\\\"></ion-icon>\\n          <ion-label *ngIf=\\\"controls.address.errors.required\\\">Direcci√≥n es requerida</ion-label>\\n        </ion-item>\\n        <ion-item  lines=\\\"none\\\" class=\\\"input-text ion-margin-top\\\">\\n          <ion-select placeholder=\\\"Seleccione una ciudad\\\" name=\\\"city\\\" formControlName=\\\"city\\\" style=\\\"display: contents;\\\" [selectedText]=\\\"city.name\\\">\\n            <ion-select-option *ngFor=\\\"let item of cities\\\" [value]=\\\"item.id\\\" selected=\\\"item.id == city.id\\\" >{{item.name }}</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" class=\\\"danger-color-text\\\" *ngIf=\\\"controls.city.dirty && controls.city.touched && controls.city.errors\\\">\\n          <ion-icon name=\\\"alert-circle\\\" slot=\\\"start\\\" class=\\\"danger-color-text\\\"></ion-icon>\\n          <ion-label *ngIf=\\\"controls.city.errors.required\\\">La ciudad es requerida</ion-label>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" class=\\\"input-text ion-margin-top\\\">\\n          <ion-input placeholder=\\\"Tel√©fono\\\" formControlName=\\\"phone\\\" required></ion-input>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" class=\\\"danger-color-text\\\" *ngIf=\\\"controls.phone.dirty && controls.phone.touched && controls.phone.errors\\\">\\n          <ion-icon name=\\\"alert-circle\\\" slot=\\\"start\\\" class=\\\"danger-color-text\\\"></ion-icon>\\n          <ion-label *ngIf=\\\"controls.phone.errors.required\\\">El tel√©fono es requerido</ion-label>\\n          <ion-label *ngIf=\\\"controls.phone.errors.minlength || controls.phone.errors.maxlength\\\">\\n            Debe ser 10 d√≠gitos\\n          </ion-label>\\n          <ion-label *ngIf=\\\"controls.phone.errors.pattern\\\">El tel√©fono es un valor num√©rico</ion-label>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" class=\\\"input-text ion-margin-top\\\">\\n          <ion-input placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required></ion-input>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" class=\\\"danger-color-text\\\" *ngIf=\\\" controls.email.dirty && controls.email.touched && controls.email.errors\\\">\\n          <ion-icon class=\\\"danger-color-text\\\" name=\\\"alert-circle\\\" slot=\\\"start\\\"></ion-icon>\\n          <ion-label *ngIf=\\\"controls.email.errors.required\\\">Email es requerido</ion-label>\\n          <ion-label *ngIf=\\\"controls.email.errors.email\\\">Debe ser un email v√°lido</ion-label>\\n        </ion-item>\\n        <ion-button type=\\\"submit\\\" expand=\\\"block\\\" mode=\\\"ios\\\" color=\\\"primary\\\" class=\\\"ion-margin-top\\\"  >\\n          ACTUALIZAR\\n        </ion-button>\\n      </form>     \\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\\n\\n \";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PersonalInformationPage } from './personal-information.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PersonalInformationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PersonalInformationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PersonalInformationPageRoutingModule } from './personal-information-routing.module';\n\nimport { PersonalInformationPage } from './personal-information.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    PersonalInformationPageRoutingModule\n  ],\n  declarations: [PersonalInformationPage]\n})\nexport class PersonalInformationPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjcmVlbnMvc2NyZWVucy10YWJzL3BlcnNvbmFsLWluZm9ybWF0aW9uL3BlcnNvbmFsLWluZm9ybWF0aW9uLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { UiService } from 'src/app/services/ui.service';\nimport { RequestService } from 'src/app/services/request.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { NetworkStatusService } from 'src/app/services/network-status.service';\n\n@Component({\n  selector: 'app-personal-information',\n  templateUrl: './personal-information.page.html',\n  styleUrls: ['./personal-information.page.scss'],\n})\nexport class PersonalInformationPage implements OnInit {\n  cities = [];\n  city: any = {};\n  types = []\n  type: any = {\n    id: \"\",\n    name: \"\"\n  }\n  //[{ value: '', disabled: true }, Validators.required]\n  personal_information = this.fb.group({\n    dni_type_id: [10, Validators.required],\n    dni: ['', Validators.required],\n    first_name: ['', Validators.required],\n    last_name: ['', Validators.required],\n    address: ['', Validators.required],\n    city: [4,],\n    phone: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10), Validators.pattern('^[0-9]*$')],],\n    email: ['', [Validators.required, Validators.email]],\n  }\n  );\n  objectChange = false\n  constructor(private requestService: RequestService,\n    private fb: FormBuilder, private router: Router, private ui: UiService,\n    private auth: AuthService,\n    private network: NetworkStatusService) { }\n\n  async ngOnInit() {\n\n  }\n\n  async ionViewWillEnter() {\n    const {\n      dni_type_id,\n      dni,\n      address,\n      city_id,\n      email,\n      first_name,\n      last_name,\n      phone,\n    } = this.auth.person;\n    this.personal_information.setValue({\n      dni_type_id: dni_type_id ? dni_type_id : 10,\n      dni: dni ? dni : '',\n      address,\n      first_name,\n      city: city_id ? city_id : 4,\n      email,\n      last_name,\n      phone\n    })\n    if (this.network.getNetworkStatus().connected) {\n      const loader = await this.ui.loading(\"Por favor espere...\");\n      this.requestService.get('indexcities')\n        .subscribe(async (res: any) => {\n\n          this.cities = res.data;\n          const obj = {\n            dni_type_id: dni_type_id ? dni_type_id : 10,\n            dni: dni ? dni : '',\n            address,\n            city: city_id,\n            email,\n            first_name,\n            last_name,\n            phone\n          }\n          this.city = this.cities.find(c => c.id == city_id);\n          this.controls.city.valueChanges.subscribe((res => {\n            console.log(\"Change city\", res)\n            this.city = this.cities.find(c => c.id == res);\n            console.log(\"Change city\", this.city)\n          }))\n          this.personal_information.valueChanges.subscribe(res => {\n            console.log(\"Objeto\", obj)\n            console.log(\"Res\", res)\n\n            const y = Object.keys(obj).find(key => {\n              return obj[key] != res[key]\n            })\n            if (y) {\n              this.objectChange = true;\n            } else {\n              this.objectChange = false;\n            }\n\n          });\n          this.requestService.get('list/attributes?parameter_id=4').subscribe(async (res: any) => {\n\n            (await loader).dismiss();\n            this.types = res.data;\n            const id = this.auth.person.dni_type_id ? this.auth.person.dni_type_id : 10\n            this.type = this.types.find(t => t.id == id)\n            this.controls.dni_type_id.valueChanges.subscribe(res => {\n              this.type = this.types.find(t => t.id == res)\n            })\n          }, async (err: any) => {\n            (await loader).dismiss();\n          })\n        }, async err => {\n          (await loader).dismiss();\n        })\n    } else {\n      this.ui.showToast(\"Verifique su conexi√≥n\")\n    }\n\n  }\n\n  get controls() {\n    return this.personal_information.controls;\n  }\n\n  getSelected() {\n\n  }\n\n  back() {\n    this.router.navigate(['/tabs/profile'])\n  }\n\n  async update() {\n    if (this.objectChange) {\n      if (this.personal_information.valid) {\n        if (this.network.getNetworkStatus().connected) {\n          const loader = await this.ui.loading(\"Por favor espere...\");\n\n          const {\n            dni_type_id,\n            dni,\n            first_name,\n            last_name,\n            address,\n            phone,\n            email,\n            city_id,\n          } = this.personal_information.value;\n          const obj = {\n            dni_type_id,\n            dni,\n            user_id: this.auth.user.id,\n            role_id: 5,\n            first_name,\n            last_name,\n            address,\n            phone,\n            email,\n            city_id: this.city.id,\n            country: \"CO\",\n            state_id: this.city.state_id,\n            transport_type_id: this.auth.vehicles.transport_type_id,\n            model: this.auth.vehicles.model,\n            brand: this.auth.vehicles.brand,\n            color: this.auth.vehicles.color,\n            plate: this.auth.vehicles.plate,\n            year: this.auth.vehicles.year,\n          }\n          console.log(\"Obj\", obj)\n          this.requestService.post('driver/update_driver', obj)\n            .subscribe(async (res: any) => {\n              (await loader).dismiss()\n              this.auth.setPerson({\n                dni_type_id,\n                dni,\n                first_name,\n                last_name,\n                address,\n                phone,\n                email,\n                city_id: this.city.id,\n                country: \"CO\",\n                state_id: this.city.state_id,\n\n              })\n              this.ui.showToast(\"Usuario actualizado exitosamente\", () => {\n                this.router.navigate(['/tabs/profile'])\n              })\n            }, async (err: any) => {\n              (await loader).dismiss()\n              console.log(err);\n              this.ui.showToast(err.error.messages[0]);\n\n            })\n        }else{\n          this.ui.showToast(\"Verifique su conexi√≥n\")\n        }\n      }\n\n    } else {\n      this.ui.showToast(\"Debe cambiar alguno de los campos\");\n    }\n  }\n\n}\n"]}