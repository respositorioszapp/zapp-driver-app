{"version":3,"sources":["webpack:///src/app/screens/screens-tabs/change-password/change-password.page.html","webpack:///src/app/screens/screens-tabs/change-password/change-password-routing.module.ts","webpack:///src/app/screens/screens-tabs/change-password/change-password.module.ts","webpack:///src/app/screens/screens-tabs/change-password/change-password.page.scss","webpack:///src/app/screens/screens-tabs/change-password/change-password.page.ts"],"names":["routes","path","component","ChangePasswordPageRoutingModule","imports","forChild","exports","ChangePasswordPageModule","declarations","ChangePasswordPage","requestService","fb","router","ui","auth","password_information","group","password","required","minLength","maxLength","password_confirm","validators","navigate","controls","valid","value","obj","role_id","role","id","user_id","user","networkStatus","JSON","parse","localStorage","getItem","connected","loading","loader","post","subscribe","res","dismiss","showToast","err","console","log","errors","messages","selector","template"],"mappings":"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","file":"screens-screens-tabs-change-password-change-password-module-es5.js","sourcesContent":["export default \"\\n<ion-content color=\\\"warning\\\">\\n  <ion-button fill=\\\"clear\\\" (click) =\\\"back()\\\" style=\\\"position: absolute;\\n  left: 0px;\\n  padding: 10px;\\\" >\\n    <ion-icon name=\\\"arrow-back-outline\\\"   slot=\\\"icon-only\\\"  ></ion-icon>\\n  </ion-button>\\n  <div style=\\\"position: relative;\\\">\\n    <div class=\\\"ion-text-center margin-top-15vh ion-padding-bottom\\\" style=\\\"width: 60%;\\n    margin: auto;\\n    position: absolute;\\n    left: 0;\\n    right: 0;\\\">\\n      <img src=\\\"assets/imgs/logo-morado.png\\\" width=\\\"100\\\">\\n    </div>\\n  </div>\\n  <ion-card style=\\\"margin-top:30%\\\">\\n    <ion-card-header>\\n      <ion-card-subtitle class=\\\"ion-text-center \\\">\\n        <span class=\\\"black-color-text\\\">Cambia tu contraseña</span>\\n      </ion-card-subtitle>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <form [formGroup]=\\\"password_information\\\" (submit)=\\\"update()\\\" novalidate>\\n        <ion-item lines=\\\"none\\\" class=\\\"input-text ion-margin-top\\\">\\n          <ion-input placeholder=\\\"Contraseña\\\" formControlName=\\\"password\\\" type=\\\"password\\\" required></ion-input>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" class=\\\"danger-color-text\\\" *ngIf=\\\"controls.password.dirty && controls.password.touched && controls.password.errors\\\">\\n          <ion-icon name=\\\"alert-circle\\\"  slot=\\\"start\\\" class=\\\"danger-color-text\\\"></ion-icon>\\n          <ion-label *ngIf=\\\"controls.password.errors.required\\\">La contraseña es requerida</ion-label>\\n          <ion-label *ngIf=\\\"controls.password.errors.minlength || controls.password.errors.maxlength\\\">La contraseña debe ser\\n            de 8 a 16 caracteres</ion-label>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" class=\\\"input-text ion-margin-top\\\">\\n          <ion-input placeholder=\\\"Repetir Contraseña\\\" formControlName=\\\"password_confirm\\\" type=\\\"password\\\" required></ion-input>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" class=\\\"danger-color-text\\\" *ngIf=\\\"controls.password_confirm.dirty && controls.password_confirm.touched && controls.password_confirm.errors\\\">\\n          <ion-icon name=\\\"alert-circle\\\" slot=\\\"start\\\" class=\\\"danger-color-text\\\"></ion-icon>\\n          <ion-label *ngIf=\\\"controls.password_confirm.errors.required\\\">La contraseña es requerida</ion-label>\\n          <ion-label *ngIf=\\\"controls.password_confirm.errors.mustMatch\\\">Las contraseñas no coinciden</ion-label>\\n        </ion-item>\\n        <ion-button type=\\\"submit\\\" expand=\\\"block\\\" mode=\\\"ios\\\" color=\\\"primary\\\" class =\\\"ion-margin-top\\\">\\n          CONTINUAR\\n        </ion-button>\\n      </form>     \\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\\n\\n \";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChangePasswordPage } from './change-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChangePasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChangePasswordPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChangePasswordPageRoutingModule } from './change-password-routing.module';\n\nimport { ChangePasswordPage } from './change-password.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    ChangePasswordPageRoutingModule\n  ],\n  declarations: [ChangePasswordPage]\n})\nexport class ChangePasswordPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjcmVlbnMvc2NyZWVucy10YWJzL2NoYW5nZS1wYXNzd29yZC9jaGFuZ2UtcGFzc3dvcmQucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { UiService } from 'src/app/services/ui.service';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { RequestService } from 'src/app/services/request.service';\nimport { Router } from '@angular/router';\nimport { ComparePassword } from 'src/app/validators/passwod.validator';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { NetworkStatus } from '@capacitor/core';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.page.html',\n  styleUrls: ['./change-password.page.scss'],\n})\nexport class ChangePasswordPage implements OnInit {\n  password_information = this.fb.group({\n    password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(16)]],\n    password_confirm: ['', Validators.required],\n  },\n    {\n      validators: ComparePassword(\"password\", \"password_confirm\")\n    }\n  );\n  constructor(private requestService: RequestService,\n    private fb: FormBuilder, private router: Router, private ui: UiService,\n    private auth: AuthService) { }\n\n  ngOnInit() {\n  }\n\n  back() {\n    this.router.navigate(['/tabs/profile'])\n  }\n\n\n  get controls() {\n    return this.password_information.controls;\n  }\n\n  async update() {\n    if (this.password_information.valid) {\n      const {\n        password,\n        password_confirm\n      } = this.password_information.value\n      const obj = {\n        password,\n        password_confirm,\n        role_id: this.auth.role.id,\n        user_id: this.auth.user.id\n      }\n      const networkStatus: NetworkStatus = JSON.parse(localStorage.getItem(\"network_status\"));\n      if (networkStatus.connected) {\n        const loader = await this.ui.loading(\"Por favor espere...\");\n        this.requestService.post('changepassword', obj).subscribe(async (res) => {\n          (await loader).dismiss()\n          this.ui.showToast(\"Se ha cambiado la contraseña exitosamente\", () => {\n            this.router.navigate(['/tabs/profile'])\n          })\n        },\n          async (err: any) => {\n            (await loader).dismiss()\n            console.log(\"Error\", err)\n            this.ui.showToast(err.errors.messages[0])\n          })\n      }else{\n        this.ui.showToast(\"Verifique su conexión\")\n      }\n\n    } else {\n      this.ui.showToast(\"Rellene todos los campos\")\n    }\n\n  }\n\n}\n"]}