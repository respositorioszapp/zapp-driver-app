{"version":3,"sources":["./src/app/screens/auth/signup-tab1/signup-tab1.page.html","./src/app/screens/auth/signup-tab1/signup-tab1-routing.module.ts","./src/app/screens/auth/signup-tab1/signup-tab1.module.ts","./src/app/screens/auth/signup-tab1/signup-tab1.page.scss","./src/app/screens/auth/signup-tab1/signup-tab1.page.ts"],"names":[],"mappings":"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","file":"signup-tab1-signup-tab1-module-es2015.js","sourcesContent":["export default \"<h4 style=\\\"text-align: center;\\\">Registro usuario</h4>\\n<form [formGroup]=\\\"personal_information\\\" (submit)=\\\"next()\\\" novalidate>\\n  <ion-item  lines=\\\"none\\\" class=\\\"input-text ion-margin-top\\\">\\n    \\n    <ion-select placeholder=\\\"Seleccione una tipo\\\" name=\\\"city\\\" formControlName=\\\"dni_type_id\\\" style=\\\"display: contents;\\\" [selectedText]=\\\"type.name\\\">\\n      <ion-select-option *ngFor=\\\"let item of types; let i = index \\\" [value]=\\\"item.id\\\"  >{{item.name }}</ion-select-option>\\n    </ion-select>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"danger-color-text\\\" *ngIf=\\\"controls.dni_type_id.dirty && controls.dni_type_id.touched && controls.dni_type_id.errors\\\">\\n    <ion-icon name=\\\"alert-circle\\\" slot=\\\"start\\\" class=\\\"danger-color-text\\\"></ion-icon>\\n    <ion-label *ngIf=\\\"controls.dni_type_id.errors.required\\\">El tipo de documento es requerido</ion-label>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"input-text ion-margin-top\\\">\\n    <ion-input placeholder=\\\"No. Identificación\\\" formControlName=\\\"dni\\\" required></ion-input>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"danger-color-text\\\" *ngIf=\\\" controls.dni.dirty && controls.dni.touched && controls.dni.errors\\\">\\n    <ion-icon name=\\\"alert-circle\\\" slot=\\\"start\\\" class=\\\"danger-color-text\\\"></ion-icon>\\n    <ion-label *ngIf=\\\"controls.dni.errors.required\\\">El número de identificación es requerido</ion-label>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"input-text ion-margin-top\\\">\\n    <ion-input placeholder=\\\"Nombre\\\" formControlName=\\\"names\\\" required></ion-input>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"danger-color-text\\\" *ngIf=\\\" controls.names.dirty && controls.names.touched && controls.names.errors\\\">\\n    <ion-icon name=\\\"alert-circle\\\" slot=\\\"start\\\" class=\\\"danger-color-text\\\"></ion-icon>\\n    <ion-label *ngIf=\\\"controls.names.errors.required\\\">Nombre es requerido</ion-label>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\"  class=\\\"input-text ion-margin-top\\\">\\n    <ion-input placeholder=\\\"Apellidos\\\" formControlName=\\\"lastnames\\\" required></ion-input>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"danger-color-text\\\" *ngIf=\\\" controls.lastnames.dirty && controls.lastnames.touched && controls.lastnames.errors\\\">\\n    <ion-icon name=\\\"alert-circle\\\" slot=\\\"start\\\" class=\\\"danger-color-text\\\" ></ion-icon>\\n    <ion-label *ngIf=\\\"controls.lastnames.errors.required\\\" >Apellidos es requerido</ion-label>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"input-text ion-margin-top\\\">\\n    <ion-input placeholder=\\\"Dirección\\\" formControlName=\\\"address\\\" required></ion-input>\\n  </ion-item>\\n  <ion-item class=\\\"danger-color-text\\\" *ngIf=\\\"controls.address.dirty && controls.address.touched && controls.address.errors\\\">\\n    <ion-icon name=\\\"alert-circle\\\" slot=\\\"start\\\" class=\\\"danger-color-text\\\"></ion-icon>\\n    <ion-label *ngIf=\\\"controls.address.errors.required\\\">Dirección es requerida</ion-label>\\n  </ion-item>\\n  <ion-item  lines=\\\"none\\\" class=\\\"input-text ion-margin-top\\\">\\n    \\n    <ion-select placeholder=\\\"Seleccione una ciudad\\\" name=\\\"city\\\" formControlName=\\\"city\\\" style=\\\"display: contents;\\\" [selectedText]=\\\"city.name\\\">\\n      <ion-select-option *ngFor=\\\"let item of cities; let i = index \\\" [value]=\\\"item.id\\\"  >{{item.name }}</ion-select-option>\\n    </ion-select>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\"  class=\\\"danger-color-text\\\" *ngIf=\\\"controls.city.dirty && controls.city.touched && controls.city.errors\\\">\\n    <ion-icon name=\\\"alert-circle\\\" slot=\\\"start\\\" class=\\\"danger-color-text\\\"></ion-icon>\\n    <ion-label *ngIf=\\\"controls.city.errors.required\\\">La ciudad es requerida</ion-label>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"input-text ion-margin-top\\\">\\n    <ion-input placeholder=\\\"Teléfono\\\" formControlName=\\\"phone\\\" required></ion-input>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"danger-color-text\\\" *ngIf=\\\"controls.phone.dirty && controls.phone.touched && controls.phone.errors\\\">\\n    <ion-icon name=\\\"alert-circle\\\" slot=\\\"start\\\" class=\\\"danger-color-text\\\"></ion-icon>\\n    <ion-label *ngIf=\\\"controls.phone.errors.required\\\">El teléfono es requerido</ion-label>\\n    <ion-label *ngIf=\\\"controls.phone.errors.minlength || controls.phone.errors.maxlength\\\">\\n      Debe ser 10 dígitos\\n    </ion-label>\\n    <ion-label *ngIf=\\\"controls.phone.errors.pattern\\\">El télefono es un valor numérico</ion-label>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"input-text ion-margin-top\\\">\\n    <ion-input placeholder=\\\"Email\\\" formControlName=\\\"email\\\" type=\\\"email\\\" required></ion-input>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"danger-color-text\\\" *ngIf=\\\" controls.email.dirty && controls.email.touched && controls.email.errors\\\">\\n    <ion-icon class=\\\"danger-color-text\\\" name=\\\"alert-circle\\\" slot=\\\"start\\\"></ion-icon>\\n    <ion-label *ngIf=\\\"controls.email.errors.required\\\">Email es requerido</ion-label>\\n    <ion-label *ngIf=\\\"controls.email.errors.email || controls.email.errors.pattern\\\">Debe ser un email válido</ion-label>\\n  </ion-item>\\n\\n  <ion-item lines=\\\"none\\\" class=\\\"input-text ion-margin-top\\\">\\n    <ion-input placeholder=\\\"Contraseña\\\" formControlName=\\\"password\\\" [type]=\\\"view ? 'text':'password'\\\" required></ion-input>\\n    <ion-icon [name]=\\\"view ? 'eye-outline': 'eye-off-outline'\\\" slot=\\\"end\\\" (click)=\\\"setView()\\\"></ion-icon>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"danger-color-text\\\"\\n    *ngIf=\\\"controls.password.dirty && controls.password.touched && controls.password.errors\\\">\\n    <ion-icon name=\\\"alert-circle\\\" slot=\\\"start\\\" class=\\\"danger-color-text\\\"></ion-icon>\\n    <ion-label *ngIf=\\\"controls.password.errors.required\\\">La contraseña es requerida</ion-label>\\n    <ion-label *ngIf=\\\"controls.password.errors.minlength || controls.password.errors.maxlength\\\">La contraseña debe\\n      ser\\n      de 8 a 16 caracteres</ion-label>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"input-text ion-margin-top\\\">\\n    <ion-input placeholder=\\\"Repetir Contraseña\\\" formControlName=\\\"password_confirm\\\" [type]=\\\"view_confirm ? 'text':'password'\\\" required>\\n    </ion-input>\\n    <ion-icon [name]=\\\"view_confirm ? 'eye-outline': 'eye-off-outline'\\\" slot=\\\"end\\\" (click)=\\\"setViewConfirm()\\\"></ion-icon>\\n  </ion-item>\\n  <ion-item lines=\\\"none\\\" class=\\\"danger-color-text\\\"\\n    *ngIf=\\\"controls.password_confirm.dirty && controls.password_confirm.touched && controls.password_confirm.errors\\\">\\n    <ion-icon name=\\\"alert-circle\\\" slot=\\\"start\\\" class=\\\"danger-color-text\\\"></ion-icon>\\n    <ion-label *ngIf=\\\"controls.password_confirm.errors.required\\\">La contraseña es requerida</ion-label>\\n    <ion-label *ngIf=\\\"controls.password_confirm.errors.mustMatch\\\">Las contraseñas no coinciden</ion-label>\\n  </ion-item>\\n  <ion-button type=\\\"submit\\\" expand=\\\"block\\\" mode=\\\"ios\\\" color=\\\"primary\\\" class=\\\"ion-margin-top\\\" >\\n    CONTINUAR\\n  </ion-button>\\n</form>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignupTab1Page } from './signup-tab1.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupTab1Page\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SignupTab1PageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SignupTab1PageRoutingModule } from './signup-tab1-routing.module';\n\nimport { SignupTab1Page } from './signup-tab1.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    SignupTab1PageRoutingModule\n  ],\n  declarations: [SignupTab1Page]\n})\nexport class SignupTab1PageModule {}\n","export default \"ion-icon {\\n  -webkit-margin-end: 10px !important;\\n          margin-inline-end: 10px !important;\\n  margin-top: 7px;\\n  margin-bottom: 7px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXNwcmlsbGEvRG9jdW1lbnRvc01pZ3VlbC9Qcm95ZWN0b3MvemFwcC96YXBwLWRyaXZlci1hcHAtcnBlbmFsb3phL3NyYy9hcHAvc2NyZWVucy9hdXRoL3NpZ251cC10YWIxL3NpZ251cC10YWIxLnBhZ2Uuc2NzcyIsInNyYy9hcHAvc2NyZWVucy9hdXRoL3NpZ251cC10YWIxL3NpZ251cC10YWIxLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG1DQUFBO1VBQUEsa0NBQUE7RUFDQSxlQUFBO0VBQ0Esa0JBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3NjcmVlbnMvYXV0aC9zaWdudXAtdGFiMS9zaWdudXAtdGFiMS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24taWNvbntcbiAgICBtYXJnaW4taW5saW5lLWVuZDogMTBweCAhaW1wb3J0YW50O1xuICAgIG1hcmdpbi10b3A6IDdweDtcbiAgICBtYXJnaW4tYm90dG9tOiA3cHg7XG59IiwiaW9uLWljb24ge1xuICBtYXJnaW4taW5saW5lLWVuZDogMTBweCAhaW1wb3J0YW50O1xuICBtYXJnaW4tdG9wOiA3cHg7XG4gIG1hcmdpbi1ib3R0b206IDdweDtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { RequestService } from 'src/app/services/request.service';\nimport { City } from 'src/app/interfaces/City';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ComparePassword } from 'src/app/validators/passwod.validator';\nimport { Router } from '@angular/router';\nimport { UiService } from 'src/app/services/ui.service';\nimport { NetworkStatusService } from 'src/app/services/network-status.service';\n\n@Component({\n  selector: 'app-signup-tab1',\n  templateUrl: './signup-tab1.page.html',\n  styleUrls: ['./signup-tab1.page.scss'],\n})\nexport class SignupTab1Page implements OnInit {\n  view = false\n  view_confirm = false\n  cities = [];\n  city: any = {};\n  types = []\n  type: any = {\n    id: \"\",\n    name: \"\"\n  }\n  /**\n   * dni_type_id: information.typeId,\n          dni: information.identification,\n   */\n  personal_information = this.fb.group({\n    names: ['', Validators.required],\n    lastnames: ['', Validators.required],\n    address: ['', Validators.required],\n    dni_type_id: [10, Validators.required],\n    dni: ['', Validators.required],\n    city: [4, Validators.required],\n    phone: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10), Validators.pattern('^[0-9]*$')],],\n    email: ['', [Validators.required, Validators.pattern('[A-Za-z0-9._%+-]{3,}@[a-zA-Z]{2,}([.]{1}[a-zA-Z]{2,}|[.]{1}[a-zA-Z]{2,}[.]{1}[a-zA-Z]{2,})')]],\n    password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(16)]],\n    password_confirm: ['', Validators.required],\n  },\n    {\n      validators: ComparePassword(\"password\", \"password_confirm\")\n    }\n  );\n  constructor(private requestService: RequestService,\n    private fb: FormBuilder, private router: Router, private ui: UiService, private network: NetworkStatusService) {\n    let person: any = {}\n    if (localStorage.getItem(\"personal_information\")) {\n      person = JSON.parse(localStorage.getItem(\"personal_information\"));\n      console.log(\"City id\", person.city.id)\n      this.personal_information\n        .setValue({\n          names: person.names,\n          lastnames: person.lastnames,\n          address: person.address,\n          city: person.city.id,\n          phone: person.phone,\n          email: person.email,\n          password: person.password,\n          password_confirm: person.password_confirm,\n          dni: person.dni ? person.dni : '',\n          dni_type_id: person.dni_type_id ? person.dni_type_id : 10\n        });\n    }\n  }\n\n  getSelected(item) {\n    return item.id == this.controls.city.value;\n  }\n\n  setView(){\n    this.view = !this.view;\n  }\n\n  setViewConfirm(){\n    this.view_confirm = !this.view_confirm;\n  }\n\n  async ngOnInit() {\n    if (this.network.getNetworkStatus().connected) {\n      const loader = await this.ui.loading(\"Por favor espere...\");\n      this.requestService.get('indexcities')\n        .subscribe(async (res: any) => {\n\n          this.cities = res.data;\n          this.city = this.cities.find(c => c.id == this.controls.city.value);\n          this.controls.city.valueChanges.subscribe((res => {\n            console.log(\"Change city\", res)\n            this.city = this.cities.find(c => c.id == res);\n            console.log(\"Change city\", this.city)\n          }))\n          this.requestService.get('list/attributes?parameter_id=4').subscribe(async (res: any) => {\n\n            (await loader).dismiss();\n            this.types = res.data;\n            this.type = this.types.find(t => t.id == 10)\n            if (localStorage.getItem(\"personal_information\")) {\n              const person = JSON.parse(localStorage.getItem(\"personal_information\"));\n              this.type = this.types.find(t => t.id == person.dni_type_id)\n            }\n            this.controls.dni_type_id.valueChanges.subscribe(res => {\n              this.type = this.types.find(t => t.id == res)\n            })\n          }, async (err: any) => {\n            (await loader).dismiss();\n          })\n\n        }, err => {\n          this.requestService.get('list/attributes?parameter_id=4').subscribe(async (res: any) => {\n\n            (await loader).dismiss();\n            this.types = res.data;\n            this.type = this.types.find(t => t.id == 10)\n            if (localStorage.getItem(\"personal_information\")) {\n              const person = JSON.parse(localStorage.getItem(\"personal_information\"));\n              this.type = this.types.find(t => t.id == person.dni_type_id)\n            }\n            this.controls.dni_type_id.valueChanges.subscribe(res => {\n              this.type = this.types.find(t => t.id == res)\n            })\n          }, async (err: any) => {\n            (await loader).dismiss();\n          })\n        })\n\n    }else{\n      this.ui.showToast(\"Verifica tu conexión\")\n    }\n\n  }\n\n\n\n  get controls() {\n    return this.personal_information.controls;\n  }\n\n  async next() {\n    const obj = {\n      ...this.personal_information.value,\n    }\n    obj.city = this.city;\n    if (this.personal_information.valid) {\n      localStorage.setItem(\"personal_information\", JSON.stringify(obj));\n      this.router.navigate([\"/signup/tab2\"])\n    }\n  }\n\n}\n"],"sourceRoot":"webpack:///"}